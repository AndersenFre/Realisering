/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package realisering15;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author Grupp15
 */
public class AgentVisaInfoAlien extends javax.swing.JFrame {

    private static InfDB databas;
    private String id;

    /**
     * Creates new form AgentVisaInfoAlien
     */
    public AgentVisaInfoAlien(InfDB databas, String id) {
        this.id = id;
        this.databas = databas;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        txtAlienID = new javax.swing.JTextField();
        lblAlienID = new javax.swing.JLabel();
        btnTillbaka = new javax.swing.JButton();
        btnSok = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaResultat2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaResultat1 = new javax.swing.JTextArea();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtAlienID.setMinimumSize(new java.awt.Dimension(100, 22));
        txtAlienID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAlienIDActionPerformed(evt);
            }
        });

        lblAlienID.setText("AlienID");

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        btnSok.setText("SÃ¶k");
        btnSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSokActionPerformed(evt);
            }
        });

        txtAreaResultat2.setEditable(false);
        txtAreaResultat2.setColumns(20);
        txtAreaResultat2.setRows(5);
        jScrollPane1.setViewportView(txtAreaResultat2);

        txtAreaResultat1.setEditable(false);
        txtAreaResultat1.setColumns(20);
        txtAreaResultat1.setRows(5);
        jScrollPane3.setViewportView(txtAreaResultat1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTillbaka)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSok)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAlienID, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(lblAlienID)))
                .addContainerGap(187, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblAlienID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAlienID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTillbaka)
                    .addComponent(btnSok))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        AgentVisaInfoAlien.this.dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void txtAlienIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAlienIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAlienIDActionPerformed

    private void btnSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSokActionPerformed
        txtAreaResultat1.setText("");
        txtAreaResultat2.setText("");

        try {
            ArrayList<HashMap<String, String>> arraylistan;

            String ettAlienID = txtAlienID.getText();
            String sqlHelaRaden = "SELECT * FROM alien WHERE alien_id=" + ettAlienID;

            ArrayList<String> bogloditer = databas.fetchColumn("SELECT alien_id FROM boglodite");
            ArrayList<String> worms = databas.fetchColumn("SELECT alien_id FROM worm");
            ArrayList<String> squids = databas.fetchColumn("SELECT alien_id FROM squid");

            String ras = "";
            for (String enBoglodite : bogloditer) {
                if (enBoglodite.equals(ettAlienID)) {
                    ras = "Boglodite";
                }
            }
            for (String enWorm : worms) {
                if (enWorm.equals(ettAlienID)) {
                    ras = "Worm";
                }
            }
            for (String enSquid : squids) {
                if (enSquid.equals(ettAlienID)) {
                    ras = "Squid";
                }
            }

            ArrayList<String> aliens = databas.fetchColumn("SELECT alien_id FROM alien");
            boolean alienHittad = false;
            for (String enAlien : aliens) {
                if (enAlien.equals(ettAlienID)) {
                    alienHittad = true;
                }
            }
            if (alienHittad == false) {
                JOptionPane.showMessageDialog(null, "Det finns ingen alien registrerad med ID: " + ettAlienID);
            }

            arraylistan = databas.fetchRows(sqlHelaRaden);
            txtAreaResultat1.append("ID" + "\t");
            txtAreaResultat1.append("Registreringsdatum" + "\t");
            txtAreaResultat1.append("Namn" + "\t");
            txtAreaResultat1.append("Telefon" + "\n");
            txtAreaResultat2.append("Plats" + "\t");
            txtAreaResultat2.append("Ansvarig agent" + "\t" + "\t");
            txtAreaResultat2.append("Ras" + "\n");

            for (HashMap<String, String> enAlienRad : arraylistan) {
                txtAreaResultat1.append(enAlienRad.get("Alien_ID") + "\t");
                txtAreaResultat1.append(enAlienRad.get("Registreringsdatum") + "\t" + "\t");
                txtAreaResultat1.append(enAlienRad.get("Namn") + "\t");
                txtAreaResultat1.append(enAlienRad.get("Telefon") + "\n");
                txtAreaResultat2.append(enAlienRad.get("Plats") + "\t");
                txtAreaResultat2.append(enAlienRad.get("Ansvarig_Agent") + "\t" + "\t");
                txtAreaResultat2.append(ras + "\n");
            }
        } catch (InfException ex) {
            Logger.getLogger(AgentVisaInfoAlien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSokActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSok;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblAlienID;
    private javax.swing.JTextField txtAlienID;
    private javax.swing.JTextArea txtAreaResultat1;
    private javax.swing.JTextArea txtAreaResultat2;
    // End of variables declaration//GEN-END:variables
}
